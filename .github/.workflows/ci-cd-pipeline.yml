name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Unit Tests
      run: |
        pytest spark_task/src/test/unit_test_cases.py || echo "No tests found, skipping..."

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.web_url }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 'latest'

    - name: Terraform Initialization
      run: terraform init

    - name: Terraform Validation
      run: terraform validate

    - name: Terraform Apply
      run: terraform apply -auto-approve

    - name: Authenticate Kubernetes Cluster
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config

    - name: Deploy Spark Job on Kubernetes
      run: |
        kubectl apply -f kubernetes/spark-deployment.yaml
        kubectl apply -f kubernetes/spark-service.yaml

    - name: Clean Up (Optional)
      run: |
        terraform destroy -auto-approve

    - name: Send Notification (Optional)
      run: |
        echo "Deployment finished successfully"
